service: sde-questions-api

plugins:
  - serverless-python-requirements

package:
  exclude:
    - node_modules/**

custom:
  stage: ${opt:stage, self:provider.stage}
  pythonRequirements:
    dockerizePip: true

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: us-west-2

  environment:
    MONGODB_USER: ${ssm:mongodb_user}
    MONGODB_PASSWORD: ${ssm:mongodb_password~true}
    MONGODB_CONN_STRING: ${ssm:connection_string}
    SLACK_WEBHOOK_URL: ${ssm:slack_webhook_url}
    COOLDOWN_DURATION: ${ssm:cooldown_duration}

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get

  create:
    handler: api/question/create.main
    events:
      - http:
          path: question
          method: post

  get:
    handler: api/question/get.main
    events:
      - http:
          path: question/{id}
          method: get

  list:
    handler: api/question/list.main
    events:
      - http:
          path: question
          method: get

  update:
    handler: api/question/update.main
    events:
      - http:
          path: question/{id}
          method: post

  delete:
    handler: api/question/delete.main
    events:
      - http:
          path: question/{id}
          method: delete

  random:
    handler: api/question/randomq.main
    events:
      - schedule: cron(0 17 * * ? *)
      - http:
          path: random
          method: get
